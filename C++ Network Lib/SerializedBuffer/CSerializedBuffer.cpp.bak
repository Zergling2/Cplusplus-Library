#include "SerializedBuffer.h"

using namespace SJNET::LIB;

CSerializedBuffer::CSerializedBuffer()
	: bufferSize(defaultSize)
{
	bufferBeginAddress = new(std::nothrow) char[defaultSize];

	if (!bufferBeginAddress)
	{
		SJNET::LIB::FileLogger fLogger(L"CSerializedBuffer_Error_", true);
		fLogger.WriteLog(L"CSerializedBuffer Constructor error!", LogType::LT_ERROR);

		ForceCrash(0x000000AA);
	}

	bufferEndAddress = bufferBeginAddress + defaultSize;
	readPointer = writePointer = bufferBeginAddress;
}

CSerializedBuffer::CSerializedBuffer(size_t size)
	: bufferSize(size)
{
	bufferBeginAddress = new(std::nothrow) char[size];

	if (!bufferBeginAddress)
	{
		SJNET::LIB::FileLogger fLogger(L"CSerializedBuffer_Error_", true);
		fLogger.WriteLog(L"CSerializedBuffer Constructor error!", LogType::LT_ERROR);

		ForceCrash(0x000000AA);
	}

	bufferEndAddress = bufferBeginAddress + size;
	readPointer = writePointer = bufferBeginAddress;
}

CSerializedBuffer::~CSerializedBuffer()
{
	delete bufferBeginAddress;
}