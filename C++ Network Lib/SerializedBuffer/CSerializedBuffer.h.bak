#ifndef __C_SERIALIZED_BUFFER_H__
#define __C_SERIALIZED_BUFFER_H__

#include <iostream>
#include <string>

#include "Logger.h"

namespace SJNET
{
	namespace LIB
	{
		class CSerializedBuffer
		{
		public:
			CSerializedBuffer();
			CSerializedBuffer(size_t size);
			~CSerializedBuffer();

			inline const void* GetBufferBeginAddress()			{ return this->bufferBeginAddress; }
			inline const void* GetBufferEndAddress()			{ return this->bufferEndAddress; }
			inline const void* GetBufferBeginAddress() const	{ return this->bufferBeginAddress; }
			inline const void* GetBufferEndAddress() const		{ return this->bufferEndAddress; }
			inline void MoveWritePointer(int offset)			{ writePointer = reinterpret_cast<char*>(writePointer) + offset; }

			inline void In(_In_ char data);
			inline void In(_In_ unsigned char data);
			inline void In(_In_ short data);
			inline void In(_In_ unsigned short data);
			inline void In(_In_ int data);
			inline void In(_In_ unsigned int data);
			inline void In(_In_ __int64 data);
			inline void In(_In_ unsigned __int64 data);
			inline void In(_In_ float data);
			inline void In(_In_ double data);
			inline void In(_In_ const char* szData);
			inline void In(_In_ const std::string& data);
			inline void In(_In_ const std::string&& data);
			inline void In(_In_ const wchar_t* szData);
			inline void In(_In_ const std::wstring& data);
			inline void In(_In_ const std::wstring&& data);

			inline CSerializedBuffer& operator<<(_In_ char data);
			inline CSerializedBuffer& operator<<(_In_ unsigned char data);
			inline CSerializedBuffer& operator<<(_In_ short data);
			inline CSerializedBuffer& operator<<(_In_ unsigned short data);
			inline CSerializedBuffer& operator<<(_In_ int data);
			inline CSerializedBuffer& operator<<(_In_ unsigned int data);
			inline CSerializedBuffer& operator<<(_In_ __int64 data);
			inline CSerializedBuffer& operator<<(_In_ unsigned __int64 data);
			inline CSerializedBuffer& operator<<(_In_ float data);
			inline CSerializedBuffer& operator<<(_In_ double data);
			inline CSerializedBuffer& operator<<(_In_ const char* szData);
			inline CSerializedBuffer& operator<<(_In_ const std::string& data);
			inline CSerializedBuffer& operator<<(_In_ const std::string&& data);
			inline CSerializedBuffer& operator<<(_In_ const wchar_t* szData);
			inline CSerializedBuffer& operator<<(_In_ const std::wstring& data);
			inline CSerializedBuffer& operator<<(_In_ const std::wstring&& data);

			inline void Out(_Inout_ char& dest);
			inline void Out(_Inout_ unsigned char& dest);
			inline void Out(_Inout_ short& dest);
			inline void Out(_Inout_ unsigned short& dest);
			inline void Out(_Inout_ int& dest);
			inline void Out(_Inout_ unsigned int& dest);
			inline void Out(_Inout_ __int64& dest);
			inline void Out(_Inout_ unsigned __int64& dest);
			inline void Out(_Inout_ float& dest);
			inline void Out(_Inout_ double& dest);
			inline void Out(_Inout_ char*& dest);
			inline void Out(_Inout_ std::string& dest);
			inline void Out(_Inout_ wchar_t*& dest);
			inline void Out(_Inout_ std::wstring& dest);

			inline CSerializedBuffer& operator>>(_Inout_ char& dest);
			inline CSerializedBuffer& operator>>(_Inout_ unsigned char& dest);
			inline CSerializedBuffer& operator>>(_Inout_ short& dest);
			inline CSerializedBuffer& operator>>(_Inout_ unsigned short& dest);
			inline CSerializedBuffer& operator>>(_Inout_ int& dest);
			inline CSerializedBuffer& operator>>(_Inout_ unsigned int& dest);
			inline CSerializedBuffer& operator>>(_Inout_ __int64& dest);
			inline CSerializedBuffer& operator>>(_Inout_ unsigned __int64& dest);
			inline CSerializedBuffer& operator>>(_Inout_ float& dest);
			inline CSerializedBuffer& operator>>(_Inout_ double& dest);
			inline CSerializedBuffer& operator>>(_Inout_ char*& dest);
			inline CSerializedBuffer& operator>>(_Inout_ std::string& dest);
			inline CSerializedBuffer& operator>>(_Inout_ wchar_t*& dest);
			inline CSerializedBuffer& operator>>(_Inout_ std::wstring& dest);

			inline size_t GetBufferSize() const { return bufferSize; }
			inline size_t GetFreeSize()	const { return reinterpret_cast<size_t>(bufferEndAddress) - reinterpret_cast<size_t>(writePointer); }
			inline size_t GetUsingSize() const { return reinterpret_cast<size_t>(writePointer) - reinterpret_cast<size_t>(bufferBeginAddress); }
			inline void Reuse() { readPointer = writePointer = bufferBeginAddress; }
		protected:
			size_t bufferSize;
			char* bufferBeginAddress;
			void* bufferEndAddress;
			void* readPointer;
			//alignas(64) - 다수의 스레드에서 동시에 이 자료구조에 접근할 일이 없을것으로 판단되므로 생략.
			void* writePointer;
			inline static const size_t defaultSize = 1400;
		};

		inline void CSerializedBuffer::In(_In_ char data)
		{
			*reinterpret_cast<char*>(writePointer) = data;
			writePointer = reinterpret_cast<char*>(writePointer) + 1;
		}

		inline void CSerializedBuffer::In(_In_ unsigned char data)
		{
			*reinterpret_cast<unsigned char*>(writePointer) = data;
			writePointer = reinterpret_cast<unsigned char*>(writePointer) + 1;
		}

		inline void CSerializedBuffer::In(_In_ short data)
		{
			*reinterpret_cast<short*>(writePointer) = data;
			writePointer = reinterpret_cast<short*>(writePointer) + 1;
		}

		inline void CSerializedBuffer::In(_In_ unsigned short data)
		{
			*reinterpret_cast<unsigned short*>(writePointer) = data;
			writePointer = reinterpret_cast<unsigned short*>(writePointer) + 1;
		}

		inline void CSerializedBuffer::In(_In_ int data)
		{
			*reinterpret_cast<int*>(writePointer) = data;
			writePointer = reinterpret_cast<int*>(writePointer) + 1;
		}

		inline void CSerializedBuffer::In(_In_ unsigned int data)
		{
			*reinterpret_cast<unsigned int*>(writePointer) = data;
			writePointer = reinterpret_cast<unsigned int*>(writePointer) + 1;
		}

		inline void CSerializedBuffer::In(_In_ __int64 data)
		{
			*reinterpret_cast<__int64*>(writePointer) = data;
			writePointer = reinterpret_cast<__int64*>(writePointer) + 1;
		}

		inline void CSerializedBuffer::In(_In_ unsigned __int64 data)
		{
			*reinterpret_cast<unsigned __int64*>(writePointer) = data;
			writePointer = reinterpret_cast<unsigned __int64*>(writePointer) + 1;
		}

		inline void CSerializedBuffer::In(_In_ float data)
		{
			*reinterpret_cast<float*>(writePointer) = data;
			writePointer = reinterpret_cast<float*>(writePointer) + 1;
		}

		inline void CSerializedBuffer::In(_In_ double data)
		{
			*reinterpret_cast<double*>(writePointer) = data;
			writePointer = reinterpret_cast<double*>(writePointer) + 1;
		}

		/* ---------------------------------------------------------------------------------------- */

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ char data)
		{
			*reinterpret_cast<char*>(writePointer) = data;
			writePointer = reinterpret_cast<char*>(writePointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ unsigned char data)
		{
			*reinterpret_cast<unsigned char*>(writePointer) = data;
			writePointer = reinterpret_cast<unsigned char*>(writePointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ short data)
		{
			*reinterpret_cast<short*>(writePointer) = data;
			writePointer = reinterpret_cast<short*>(writePointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ unsigned short data)
		{
			*reinterpret_cast<unsigned short*>(writePointer) = data;
			writePointer = reinterpret_cast<unsigned short*>(writePointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ int data)
		{
			*reinterpret_cast<int*>(writePointer) = data;
			writePointer = reinterpret_cast<int*>(writePointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ unsigned int data)
		{
			*reinterpret_cast<unsigned int*>(writePointer) = data;
			writePointer = reinterpret_cast<unsigned int*>(writePointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ __int64 data)
		{
			*reinterpret_cast<__int64*>(writePointer) = data;
			writePointer = reinterpret_cast<__int64*>(writePointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ unsigned __int64 data)
		{
			*reinterpret_cast<unsigned __int64*>(writePointer) = data;
			writePointer = reinterpret_cast<unsigned __int64*>(writePointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ float data)
		{
			*reinterpret_cast<float*>(writePointer) = data;
			writePointer = reinterpret_cast<float*>(writePointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ double data)
		{
			*reinterpret_cast<double*>(writePointer) = data;
			writePointer = reinterpret_cast<double*>(writePointer) + 1;

			return *this;
		}


		/* ---------------------------------------------------------------------------------------- */

		inline void CSerializedBuffer::Out(_Inout_ char& dest)
		{
			dest = *reinterpret_cast<char*>(readPointer);
			readPointer = reinterpret_cast<char*>(readPointer) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ unsigned char& dest)
		{
			dest = *reinterpret_cast<unsigned char*>(readPointer);
			readPointer = reinterpret_cast<unsigned char*>(readPointer) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ short& dest)
		{
			dest = *reinterpret_cast<short*>(readPointer);
			readPointer = reinterpret_cast<short*>(readPointer) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ unsigned short& dest)
		{
			dest = *reinterpret_cast<unsigned short*>(readPointer);
			readPointer = reinterpret_cast<unsigned short*>(readPointer) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ int& dest)
		{
			dest = *reinterpret_cast<int*>(readPointer);
			readPointer = reinterpret_cast<int*>(readPointer) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ unsigned int& dest)
		{
			dest = *reinterpret_cast<unsigned int*>(readPointer);
			readPointer = reinterpret_cast<unsigned int*>(readPointer) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ __int64& dest)
		{
			dest = *reinterpret_cast<__int64*>(readPointer);
			readPointer = reinterpret_cast<__int64*>(readPointer) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ unsigned __int64& dest)
		{
			dest = *reinterpret_cast<unsigned __int64*>(readPointer);
			readPointer = reinterpret_cast<unsigned __int64*>(readPointer) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ float& dest)
		{
			dest = *reinterpret_cast<float*>(readPointer);
			readPointer = reinterpret_cast<float*>(readPointer) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ double& dest)
		{
			dest = *reinterpret_cast<double*>(readPointer);
			readPointer = reinterpret_cast<double*>(readPointer) + 1;
		}

		/* ---------------------------------------------------------------------------------------- */

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ char& dest)
		{
			dest = *reinterpret_cast<char*>(readPointer);
			readPointer = reinterpret_cast<char*>(readPointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ unsigned char& dest)
		{
			dest = *reinterpret_cast<unsigned char*>(readPointer);
			readPointer = reinterpret_cast<unsigned char*>(readPointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ short& dest)
		{
			dest = *reinterpret_cast<short*>(readPointer);
			readPointer = reinterpret_cast<short*>(readPointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ unsigned short& dest)
		{
			dest = *reinterpret_cast<unsigned short*>(readPointer);
			readPointer = reinterpret_cast<unsigned short*>(readPointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ int& dest)
		{
			dest = *reinterpret_cast<int*>(readPointer);
			readPointer = reinterpret_cast<int*>(readPointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ unsigned int& dest)
		{
			dest = *reinterpret_cast<unsigned int*>(readPointer);
			readPointer = reinterpret_cast<unsigned int*>(readPointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ __int64& dest)
		{
			dest = *reinterpret_cast<__int64*>(readPointer);
			readPointer = reinterpret_cast<__int64*>(readPointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ unsigned __int64& dest)
		{
			dest = *reinterpret_cast<unsigned __int64*>(readPointer);
			readPointer = reinterpret_cast<unsigned __int64*>(readPointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ float& dest)
		{
			dest = *reinterpret_cast<float*>(readPointer);
			readPointer = reinterpret_cast<float*>(readPointer) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ double& dest)
		{
			dest = *reinterpret_cast<double*>(readPointer);
			readPointer = reinterpret_cast<double*>(readPointer) + 1;

			return *this;
		}

		inline void CSerializedBuffer::In(_In_ const char* szData)
		{
			size_t copySize = strlen(szData) + 1;
			memmove(writePointer, szData, copySize);
			writePointer = reinterpret_cast<char*>(writePointer) + copySize;
		}

		inline void CSerializedBuffer::In(_In_ const std::string& data)
		{
			In(data.c_str());
		}

		inline void CSerializedBuffer::In(_In_ const std::string&& data)
		{
			In(data.c_str());
		}

		inline void CSerializedBuffer::In(_In_ const wchar_t* szData)
		{
			size_t copySize = (wcslen(szData) << 1) + 2;
			memmove(writePointer, szData, copySize);
			writePointer = reinterpret_cast<char*>(writePointer) + copySize;
		}

		inline void CSerializedBuffer::In(_In_ const std::wstring& data)
		{
			In(data.c_str());
		}

		inline void CSerializedBuffer::In(_In_ const std::wstring&& data)
		{
			In(data.c_str());
		}

		/* ---------------------------------------------------------------------------------------- */

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ const char* szData)
		{
			size_t copySize = strlen(szData) + 1;
			memmove(writePointer, szData, copySize);
			writePointer = reinterpret_cast<char*>(writePointer) + copySize;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ const std::string& data)
		{
			return *this << data.c_str();
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ const std::string&& data)
		{
			return *this << data.c_str();
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ const wchar_t* szData)
		{
			size_t copySize = (wcslen(szData) << 1) + 2;
			memmove(writePointer, szData, copySize);
			writePointer = reinterpret_cast<char*>(writePointer) + copySize;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ const std::wstring& data)
		{
			return (*this << data.c_str());
		}

		inline CSerializedBuffer& CSerializedBuffer::operator<<(_In_ const std::wstring&& data)
		{
			return (*this << data.c_str());
		}

		/* ---------------------------------------------------------------------------------------- */

		inline void CSerializedBuffer::Out(_Inout_ char*& dest)
		{
			dest = reinterpret_cast<char*>(readPointer);
			readPointer = reinterpret_cast<char*>(readPointer) + strlen(reinterpret_cast<char*>(readPointer)) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ std::string& dest)
		{
			dest = reinterpret_cast<char*>(readPointer);
			readPointer = reinterpret_cast<char*>(readPointer) + strlen(reinterpret_cast<char*>(readPointer)) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ wchar_t*& dest)
		{
			dest = reinterpret_cast<wchar_t*>(readPointer);
			readPointer = reinterpret_cast<wchar_t*>(readPointer) + wcslen(reinterpret_cast<wchar_t*>(readPointer)) + 1;
		}

		inline void CSerializedBuffer::Out(_Inout_ std::wstring& dest)
		{
			dest = reinterpret_cast<wchar_t*>(readPointer);
			readPointer = reinterpret_cast<wchar_t*>(readPointer) + wcslen(reinterpret_cast<wchar_t*>(readPointer)) + 1;
		}

		/* ---------------------------------------------------------------------------------------- */

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ char*& dest)
		{
			dest = reinterpret_cast<char*>(readPointer);
			readPointer = reinterpret_cast<char*>(readPointer) + strlen(reinterpret_cast<char*>(readPointer)) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ std::string& dest)
		{
			dest = reinterpret_cast<char*>(readPointer);
			readPointer = reinterpret_cast<char*>(readPointer) + strlen(reinterpret_cast<char*>(readPointer)) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ wchar_t*& dest)
		{
			dest = reinterpret_cast<wchar_t*>(readPointer);
			readPointer = reinterpret_cast<wchar_t*>(readPointer) + wcslen(reinterpret_cast<wchar_t*>(readPointer)) + 1;

			return *this;
		}

		inline CSerializedBuffer& CSerializedBuffer::operator>>(_Inout_ std::wstring& dest)
		{
			dest = reinterpret_cast<wchar_t*>(readPointer);
			readPointer = reinterpret_cast<wchar_t*>(readPointer) + wcslen(reinterpret_cast<wchar_t*>(readPointer)) + 1;

			return *this;
		}
	}
}


#endif // !__C_SERIALIZED_BUFFER_H__
